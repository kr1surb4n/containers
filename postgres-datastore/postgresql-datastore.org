* docker compose
** postgress
*** code
#+being_src
postgres:
  image: postgres:alpine
  ports:
    - "5432:5432"
  volumes:
    - ./data:/var/lib/postgresql/data
  environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=root
    - POSTGRES_DB=postgres
  restart: always

#+end_src
*** from docker docs
**** init folder /docker-entrypoint.initdb.d
#+begin_example
If you would like to do additional initialization in an image derived from this one, 
add one or more *.sql, *.sql.gz, or *.sh scripts under /docker-entrypoint-initdb.d
 (creating the directory if necessary). After the entrypoint calls initdb to create
 the default postgres user and database, it will run any *.sql files, run 
any executable *.sh scripts, and source any 
non-executable *.sh scripts found in that directory to do further initialization before starting the service.


#+end_example
** postgrest
#+begin_src
postgrest:
  image: postgrest/postgrest
  ports:
    - "3000:3000"
  environment:
    PGRST_DB_URI: postgres://username:password@postgres:5432/postgres
    PGRST_DB_SCHEMA: public
    PGRST_DB_ANON_ROLE: postgres
  restart: unless-stopped
#+end_src
* kanban
